{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red79\green81\blue80;\red255\green255\blue255;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c38431\c39216\c38824;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
}
\margl1440\margr1440\vieww19280\viewh14820\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\shad\shadx0\shady-20\shadr0\shado255 \shadc0 # This references the default Python container from\
# the Docker Hub with the 2.7 tag:\
# https://registry.hub.docker.com/_/python/\
# If you want to use a slim Python container with\
# version 3.4.3 you would use: python:3.4-slim\
# If you want Google's container you would reference google/python\
# Read more about containers on our dev center\
# https://devcenter.wercker.com/overview-and-core-concepts/containers/\
box: python:2.7\
# You can also use services such as databases. Read more on our dev center:\
# https://devcenter.wercker.com/administration/services/\
# services:\
    # - postgres\
    # https://devcenter.wercker.com/administration/services/examples/postgresql/\
\
    # - mongo\
    # https://devcenter.wercker.com/administration/services/examples/mongodb/\
\
# This is the build pipeline. Pipelines are the core of wercker\
# Read more about pipelines on our dev center\
# https://devcenter.wercker.com/development/pipelines/\
build:\
  # The steps that will be executed on build\
  # Steps make up the actions in your pipeline\
  # Read more about steps on our dev center:\
  # https://devcenter.wercker.com/development/steps/\
  steps:\
    # A step that sets up the python virtual environment\
    - virtualenv:\
        name: setup virtual environment\
        install_wheel: false # Enable wheel to speed up builds (experimental)\
\
    # # Use this virtualenv step for python 3.2\
    # - virtualenv\
    #     name: setup virtual environment\
    #     python_location: /usr/bin/python3.2\
\
    # A step that executes `pip install` command.\
    - pip-install\
\
    # # This pip-install clears the local wheel cache\
    # - pip-install:\
    #     clean_wheel_dir: true\
\
    # A custom script step, name value is used in the UI\
    # and the code value contains the command that get executed\
    - script:\
        name: echo python information\
        code: |\
          echo "python version $(python --version) running"\
          echo "pip version $(pip --version) running"}